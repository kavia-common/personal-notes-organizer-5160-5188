{"is_source_file": true, "format": "TypeScript", "description": "This file defines a generic debounce function that delays invocation of the provided function until after a specified wait time has elapsed since the last call. It is used to limit the rate at which a function can fire, often in response to events like user input or window resizing.", "external_files": [], "external_methods": ["setTimeout", "clearTimeout"], "published": ["debounce"], "classes": [], "methods": [{"name": "export function debounce<F extends (...args: any[]) => any>(func: F, waitFor: number) { debounce", "description": "Creates a debounced version of the provided function that delays its execution until after waitFor milliseconds have elapsed since the last time it was invoked.", "scope": "", "scopeKind": ""}], "calls": ["clearTimeout", "setTimeout"], "search-terms": ["debounce", "TypeScript", "utility", "function delay", "rate limiting"], "state": 2, "file_id": 10, "knowledge_revision": 21, "git_revision": "", "ctags": [{"_type": "tag", "name": "debounce", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-5160-5188/notes_frontend/utils/debounce.ts", "pattern": "/^export function debounce<F extends (...args: any[]) => any>(func: F, waitFor: number) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "debounced", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-5160-5188/notes_frontend/utils/debounce.ts", "pattern": "/^  const debounced = (...args: Parameters<F>) => {$/", "language": "TypeScript", "kind": "constant", "scope": "debounce", "scopeKind": "function"}], "hash": "5de1bab62c22e325d2a6d62e2bf2dab8", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/utils/debounce.ts", "revision_history": [{"21": ""}]}